<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="ceri: bdd test " enabled="true" name="behavior">	${:import(org.junit.Test)}@Test
public void should${cursor}() {
	
}
</template><template autoinsert="true" context="java" deleted="false" description="ceri: logger declaration" enabled="true" name="logger">${:import(org.apache.logging.log4j.LogManager,org.apache.logging.log4j.Logger)}private static final Logger logger = LogManager.getLogger();</template><template autoinsert="true" context="java" deleted="false" description="ceri: log started" enabled="true" name="logstart">logger.info("{} started", getClass().getSimpleName());</template><template autoinsert="true" context="java" deleted="false" description="ceri: log stopped" enabled="true" name="logstop">logger.info("{} stopped", getClass().getSimpleName());</template><template autoinsert="true" context="java" deleted="false" description="ceri: init mocks" enabled="true" name="mock">${:import(org.junit.Before,org.mockito.Mock,org.mockito.MockitoAnnotations)}
@Before
public void init() {
	MockitoAnnotations.initMocks(this);
}
</template><template autoinsert="true" context="java" deleted="false" description="ceri: double const" enabled="true" name="ssd">private static final double </template><template autoinsert="true" context="java" deleted="false" description="ceri: int const" enabled="true" name="ssi">private static final int </template><template autoinsert="true" context="java" deleted="false" description="ceri: Pattern const" enabled="true" name="ssp">private static final Pattern _REGEX = Pattern.compile("");</template><template autoinsert="true" context="java" deleted="false" description="ceri: string const" enabled="true" name="sss">private static final String </template><template autoinsert="true" context="java" deleted="false" description="ceri: exercise equals contract" enabled="true" name="teq">@Test
public void shouldNotBreachEqualsContract() {
	exerciseEquals(obj, eq0, eq1);
	assertAllNotEqual(obj, ne0, ne1);
}
</template><template autoinsert="true" context="java" deleted="false" description="ceri: unit test class" enabled="true" name="test">	${:import(org.junit.Test)}@Test
public void test${cursor}() {
	
}
</template><template autoinsert="true" context="java" deleted="false" description="ceri: StreamUtil.toList" enabled="true" name="toList">${:importStatic('ceri.common.collection.StreamUtil.*')}toList(</template><template autoinsert="true" context="java" deleted="false" description="ceri: StreamUtil.toMap" enabled="true" name="toMap">${:importStatic('ceri.common.collection.StreamUtil.*')}toMap(</template><template autoinsert="true" context="java" deleted="false" description="ceri: test private constructor" enabled="true" name="tpc">${:importStatic('ceri.common.test.TestUtil.*')}
	@Test
	public void testConstructorIsPrivate() {
		assertPrivateConstructor(${enclosing_type}&lt;-del${cursor}.class);
	}

</template><template autoinsert="true" context="java" deleted="false" description="ceri: test static imports" enabled="true" name="tsi">${:importStatic('ceri.common.test.TestUtil.*',
'org.hamcrest.CoreMatchers.*',
'org.junit.Assert.*',
'org.mockito.Mockito.*')}</template><template autoinsert="true" context="java" deleted="false" description="ceri: utility class boilerplate" enabled="true" name="util">
	private ${enclosing_type}() {}

	public static void X() {
	}</template><template autoinsert="true" context="java" deleted="false" description="ceri: validation static imports" enabled="true" name="val">${:importStatic('ceri.common.validation.ValidationUtil.*')}</template></templates>